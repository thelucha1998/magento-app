version: "3"

networks:
 kong-net:
  driver: bridge

services:

  #######################################
  # Postgres: The database used by Kong
  #######################################
  
  kong-database:
    container_name: kong-database
    image: postgres:9.6
    restart: always
    networks:
      - kong-net
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kongpass
    ports:
      - "5432:5432"
    volumes:
      - ./kong/:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: kong:latest
    container_name: kong-migration
    #command: "kong migrations bootstrap --vv"
    command: "kong migrations up"
    networks:
      - kong-net
    volumes:
      - ./kong/:/var/lib/postgresql/data
    restart: on-failure
    environment:
      KONG_PG_HOST: kong-database
      KONG_DATABASE: postgres
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
      KONG_CASSANDRA_CONTACT_POINTS: kong-database
    links:
      - kong-database:kong-database
    depends_on:
      - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong:latest
    container_name: kong
    restart: always
    networks:
      - kong-net
    environment:
      KONG_PG_HOST: kong-database
      KONG_DATABASE: postgres
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
      KONG_CASSANDRA_CONTACT_POINTS: kong-database
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    depends_on:
      - kong-migration
      - kong-database
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 5s
      timeout: 2s
      retries: 15
    ports:
      - "8001:8001"
      - "8000:8000"

  #######################################
  # Konga database prepare
  #######################################
  
  konga-prepare:
    image: pantsel/konga:next
    container_name: kong-prepare
    command: "-c prepare -a postgres -u postgresql://kong:kongpass@kong-database:5432/konga_db"
    networks:
      - kong-net
    restart: on-failure
    environment:
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: kongpass
    links:
      - kong-database
    depends_on:
      - kong-database

  #kongadb:
  #  image: postgres:9.6
  #  container_name: kongadb
  #  networks:
  #    - kong-net
  #  restart: on-failure
  #  environment:
  #    POSTGRES_USER: konga
  #    POSTGRES_PASSWORD: kong@123
  #    POSTGRES_DB: konga_database
  
  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: pantsel/konga:next
    container_name: konga
    restart: always
    networks:
      - kong-net
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: kongpass
      TOKEN_SECRET: km1GUr4RkcQD7DewhJPNXrCuZwcKmqjb
      DB_DATABASE: konga_db
      NODE_ENV: development
    depends_on:
      - kong-database
    ports:
      - "1337:1337"


  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: kong@example.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin4
    networks:
      - kong-net
    volumes:
      - ./kong/pgadmin-data:/var/lib/pgadmin